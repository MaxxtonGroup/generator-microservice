buildscript {
  repositories {
    mavenCentral()
  }
  dependencies {
    classpath("org.springframework.boot:spring-boot-gradle-plugin:1.2.5.RELEASE")
    classpath("io.spring.gradle:dependency-management-plugin:0.5.2.RELEASE")
    classpath("se.transmode.gradle:gradle-docker:1.2")
  }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'docker'
apply plugin: 'idea'
apply plugin: 'spring-boot'
apply plugin: 'io.spring.dependency-management'

jar {
  baseName = '<%= baseName %>'
  version = '0.0.1-SNAPSHOT'
}
sourceCompatibility = 1.8
targetCompatibility = 1.8
group = '<%= baseName %>'
mainClassName = '<%= packageName %>.<%= mainClassName %>'

// sidenote
// this task only works when you run it from command line after you init boot2docker (osx)
// $(boot2docker shellinit)
task buildDocker(type: Docker, dependsOn: [build, jar]) {
  push = false
  applicationName = jar.baseName
  dockerfile = file('src/main/docker/Dockerfile')
  dockerBinary = file('/usr/local/bin/docker') // move to a gradle.properties
  doFirst {
    copy {
      from jar
      into stageDir
    }
  }
}

// add tasks to a gradle group
configure(buildDocker) {
  group = 'distribution'
  description = 'Create a Docker image'
}


repositories {
  mavenCentral()
  maven { url 'http://repo.spring.io/milestone' }
  maven { url 'http://repo.spring.io/snapshot' }
}


dependencies {
  compile("org.springframework.boot:spring-boot-starter")
  compile("org.springframework.boot:spring-boot-starter-actuator")
  
  compile("org.springframework.cloud:spring-cloud-starter")
  compile("org.springframework.cloud:spring-cloud-starter-security")
  compile("org.springframework.cloud:spring-cloud-starter-hystrix")
  compile("org.springframework.cloud:spring-cloud-starter-eureka")
  compile("io.reactivex:rxjava")

  compile("org.springframework.security.oauth:spring-security-oauth2")
     
  testCompile("org.springframework.boot:spring-boot-starter-test")
}

dependencyManagement {
  imports { 
    mavenBom "org.springframework.cloud:spring-cloud-starter-parent:Angel.SR3" 
  }
}   

eclipse {
  classpath {
    containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
    containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'
  }
}

task wrapper(type: Wrapper) {
  gradleVersion = '2.3'
}
